/* 8-stpush.p
 * MODULE
	PUSH
 * DESCRIPTION
        Назначение программы, описание процедур и функций
        8-я строка ежедневная
 * RUN
        Способ вызова программы, описание параметров, примеры вызова
 * CALLER
        Список процедур, вызывающих этот файл
 * SCRIPT
        Список скриптов, вызывающих этот файл
 * INHERIT
        Список вызываемых процедур
 * MENU
        Перечень пунктов Меню Прагмы 
 * AUTHOR
        31/12/99 pragma
 * CHANGES
    25/06/03 nataly были изменены признаки 007, 008, 013, 024,029,032,031,025,137,152
    04/12/03 nataly внесены изменения в список счетов ГК (новый ПС)
    21/01/04 sasco  добавил дебиторов (162) в сумму по 131
    25/05/04 suchkov - добавил новые счета
    23/02/06 NATALY добаила только для резиденотов-банков - строка 20
    23/02/06 NATALY строка  031 добавила счет 2240, 2770
    23/02/06 NATALY строка  100 изменила алгоритм на остатки из баланса по счетам 1659, 1699
    09/03/06 nataly 8-я строка PUSH
    20/03/06 nataly добавила дату на ... 
    24/03/06 nataly перевела на базу BANK
    27/03/06 nataly расчет ведется на дату vdt = cls.whn
    16/04/06 nataly добавила 2240 в 032
    03/07/06 u00121 добавил индексы в таблицы temp и final,а также no-undo
    14/07/06 u00119 добавила if avail t-final, t2-final, t3-final, t4-final
*/

def new shared stream st-out.
def new shared var v-gl as char extent 200.
def new shared var s-gl as char extent 200.
def new shared var vasof as date.
def new shared var v-pass as char.

def new shared var i as int. 
def new shared var k as int. 
def new shared var j as int init 1. 

def var sum as decimal no-undo.
def var coef as decimal no-undo.



{global.i}
{push.i } /*!!!*/

for each sysc where sysc.sysc="SYS1" no-lock.
v-pass = ENTRY(1,sysc.chval).
end.

/*output stream st-out to rpt.img.*/
output stream st-out to value(vfname).

def new  shared  temp-table temp  no-undo
  field  kod  as char
  field  gl  as integer   format 'zzzzzz'
  field  val  as decimal format 'z,zzz,zzz,zz9.99-'
  field rem  as char
  index idx1-temp kod
  index idx2-temp gl kod. 
  
def  temp-table final  no-undo
  field  kod  as char
  field  gl  as integer   format 'zzzzzz'
  field  val  as decimal format 'z,zzz,zzz,zz9.99-'
  field rem  as char
  index idx1-final kod. 

def buffer t-final for final.
def buffer t2-final for final.
def buffer t3-final for final.
def buffer t4-final for final.
def buffer t5-final for final.
define variable sumdeb as decimal no-undo.
def var sum2 as decimal no-undo.

s-gl[1] = '001,*,*,d1t,d2t'.

s-gl[2] = '002,1,4,1301,1302,1303,1304,1305,1306,1309,1458'. /* Кредиты БАНКАМ */
s-gl[3] = '003,1,1,1401,1403,1405,1407,1409,1411,1417,1420,1421,1422,1423,1424,1425,1458'.

s-gl[4] = '006,1,4,1201,1202,1204,1205,1206,1207,1208,1209,1451,1452,1453,1454,1455,1456,1457'. 
s-gl[5] = '007,1,1,1201,1202,1204,1205,1206,1207,1208,1209,1451,1452,1453,1454,1455,1456,1457'. 
s-gl[6] = '007,1,2,1201,1202,1204,1205,1206,1207,1208,1209,1451,1452,1453,1454,1455,1456,1457'. 
s-gl[7] = '008,1,5,1201,1202,1204,1205,1206,1207,1208,1209,1451,1452,1453,1454,1455,1456,1457'. 
s-gl[8] = '008,1,6,1201,1202,1204,1205,1206,1207,1208,1209,1451,1452,1453,1454,1455,1456,1457'. 
s-gl[9] = '008,1,7,1201,1202,1204,1205,1206,1207,1208,1209,1451,1452,1453,1454,1455,1456,1457'. 
s-gl[10] = '008,1,8,1201,1202,1204,1205,1206,1207,1208,1209,1451,1452,1453,1454,1455,1456,1457'. 
s-gl[11]  = '009,*,3,1705,1710,1740,1725,1726,1727,1728,1730,1731,1733,1734,1735,1741,1744,1745,1746,1747,1748,1749,1792,1799,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1831,1832,1833,1834,1835,1836,1837,1838,1839,1852,1855,1856,1860,1861,1864,1867,1870,1873,1874,1890,1891,1892,1893,1894,1895,1896,1899'. 
s-gl[12] = '010,1,4,1705,1710,1740,1725,1726,1727,1728,1730,1731,1733,1734,1735,1741,1744,1745,1746,1747,1748,1749,1792,1799,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1831,1832,1833,1834,1835,1836,1837,1838,1839,1852,1855,1856,1860,1861,1864,1867,1870,1873,1874,1890,1891,1892,1893,1894,1895,1896,1899'. 
s-gl[13] = '011,1,1,1445,1705,1710,1740,1725,1726,1727,1728,1730,1731,1733,1734,1735,1741,1744,1745,1746,1747,1748,1749,1792,1799,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1831,1832,1833,1834,1835,1836,1837,1838,1839,1852,1855,1856,1860,1861,1864,1867,1870,1873,1874,1890,1891,1892,1893,1894,1895,1896,1899'. 
s-gl[14] = '012,1,5,1445,1705,1710,1740,1725,1726,1727,1728,1730,1731,1733,1734,1735,1741,1744,1745,1746,1747,1748,1749,1792,1799,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1831,1832,1833,1834,1835,1836,1837,1838,1839,1852,1855,1856,1860,1861,1864,1867,1870,1873,1874,1890,1891,1892,1893,1894,1895,1896,1899'. 
s-gl[15] = '012,1,6,1445,1705,1710,1740,1725,1726,1727,1728,1730,1731,1733,1734,1735,1741,1744,1745,1746,1747,1748,1749,1792,1799,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1831,1832,1833,1834,1835,1836,1837,1838,1839,1852,1855,1856,1860,1861,1864,1867,1870,1873,1874,1890,1891,1892,1893,1894,1895,1896,1899'. 
s-gl[16] = '012,1,7,1445,1705,1710,1740,1725,1726,1727,1728,1730,1731,1733,1734,1735,1741,1744,1745,1746,1747,1748,1749,1792,1799,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1831,1832,1833,1834,1835,1836,1837,1838,1839,1852,1855,1856,1860,1861,1864,1867,1870,1873,1874,1890,1891,1892,1893,1894,1895,1896,1899'. 
s-gl[17] = '012,1,8,1445,1705,1710,1740,1725,1726,1727,1728,1730,1731,1733,1734,1735,1741,1744,1745,1746,1747,1748,1749,1792,1799,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1831,1832,1833,1834,1835,1836,1837,1838,1839,1852,1855,1856,1860,1861,1864,1867,1870,1873,1874,1890,1891,1892,1893,1894,1895,1896,1899'. 
s-gl[18] = '013,1,9,1445,1705,1710,1740,1725,1726,1727,1728,1730,1731,1733,1734,1735,1741,1744,1745,1746,1747,1748,1749,1792,1799,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1831,1832,1833,1834,1835,1836,1837,1838,1839,1852,1855,1856,1860,1861,1864,1867,1870,1873,1874,1890,1891,1892,1893,1894,1895,1896,1899'. 

s-gl[19] = '022,1,5,2011,2021,2111,2121,2201,2202,2203,2204,2205,2206,2207,2208,2209,2211,2215,2217,2219,2221,2222,2223,2224,2225,2226,2227,2228,2229'. 
s-gl[20] = '022,1,6,2011,2021,2111,2121,2201,2202,2203,2204,2205,2206,2207,2208,2209,2211,2215,2217,2219,2221,2222,2223,2224,2225,2226,2227,2228,2229'. 
s-gl[21] = '022,1,7,2011,2021,2111,2121,2201,2202,2203,2204,2205,2206,2207,2208,2209,2211,2215,2217,2219,2221,2222,2223,2224,2225,2226,2227,2228,2229'. 
s-gl[22] = '022,1,8,2011,2021,2111,2121,2201,2202,2203,2204,2205,2206,2207,2208,2209,2211,2215,2217,2219,2221,2222,2223,2224,2225,2226,2227,2228,2229'. 

s-gl[23] = '023,1,9,2201,2202,2203,2204,2205,2206,2207,2208,2209,2211,2215,2217,2219,2221,2222,2223,2224,2225,2226,2227,2228,2229'. 

s-gl[24] = '024,1,4,2054,2055,2056,2057,2058,2065,2113,2255'. 
s-gl[25] = '026,1,4,2301,2303,2304,2305'. 
s-gl[26] = '027,1,5,2301,2303,2304,2305'. 
s-gl[27] = '027,1,6,2301,2303,2304,2305'. 
s-gl[28] = '027,1,7,2301,2303,2304,2305'. 
s-gl[29] = '027,1,8,2301,2303,2304,2305'. 
s-gl[30] = '028,1,9,2301,2303,2304,2305'. 
s-gl[31] = '029,1,4,2210,2237,2702,2703,2704,2705,2706,2708,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2725,2726,2730,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2792,2793,2799,2811,2812,2813,2814,2815,2816,2817,2818,2819,2831,2832,2833,2834,2835,2836,2838,2839,2852,2855,2856,2860,2862,2864,2867,2870,2872,2873,2890,2891,2892,2893,2894,2895,2896,2899'. 
s-gl[32] = '031,1,2,2210,2237,2240,2702,2703,2704,2705,2706,2708,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2725,2726,2730,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2770,2792,2793,2799,2811,2812,2813,2814,2815,2816,2817,2818,2819,2831,2832,2833,2834,2835,2836,2838,2839,2852,2855,2856,2860,2862,2864,2867,2870,2872,2873,2890,2891,2892,2893,2894,2895,2896,2899'.        
s-gl[33] = '031,1,5,2210,2237,2240,2702,2703,2704,2705,2706,2708,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2725,2726,2730,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2770,2792,2793,2799,2811,2812,2813,2814,2815,2816,2817,2818,2819,2831,2832,2833,2834,2835,2836,2838,2839,2852,2855,2856,2860,2862,2864,2867,2870,2872,2873,2890,2891,2892,2893,2894,2895,2896,2899'.        
s-gl[34] = '031,1,6,2210,2237,2240,2702,2703,2704,2705,2706,2708,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2725,2726,2730,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2770,2792,2793,2799,2811,2812,2813,2814,2815,2816,2817,2818,2819,2831,2832,2833,2834,2835,2836,2838,2839,2852,2855,2856,2860,2862,2864,2867,2870,2872,2873,2890,2891,2892,2893,2894,2895,2896,2899'.        
s-gl[35] = '031,1,7,2210,2237,2240,2702,2703,2704,2705,2706,2708,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2725,2726,2730,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2770,2792,2793,2799,2811,2812,2813,2814,2815,2816,2817,2818,2819,2831,2832,2833,2834,2835,2836,2838,2839,2852,2855,2856,2860,2862,2864,2867,2870,2872,2873,2890,2891,2892,2893,2894,2895,2896,2899'.        
s-gl[36] = '031,1,8,2210,2237,2240,2702,2703,2704,2705,2706,2708,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2725,2726,2730,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2770,2792,2793,2799,2811,2812,2813,2814,2815,2816,2817,2818,2819,2831,2832,2833,2834,2835,2836,2838,2839,2852,2855,2856,2860,2862,2864,2867,2870,2872,2873,2890,2891,2892,2893,2894,2895,2896,2899'.        
s-gl[37] = '032,1,9,2210,2237,2240,2702,2703,2704,2705,2706,2708,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2725,2726,2730,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2792,2793,2799,2811,2812,2813,2814,2815,2816,2817,2818,2819,2831,2832,2833,2834,2835,2836,2838,2839,2852,2855,2856,2860,2862,2864,2867,2870,2872,2873,2890,2891,2892,2893,2894,2895,2896,2899'.        

s-gl[38] = '004,1,5,1401,1403,1405,1407,1409,1411,1417,1420,1421,1422,1423,1424,1425,1458'. /* ЮЛ */
s-gl[39] = '004,1,6,1401,1403,1405,1407,1409,1411,1417,1420,1421,1422,1423,1424,1425,1458'. /* ЮЛ */
s-gl[40] = '004,1,7,1401,1403,1405,1407,1409,1411,1417,1420,1421,1422,1423,1424,1425,1458'. /* ЮЛ */
s-gl[41] = '004,1,8,1401,1403,1405,1407,1409,1411,1417,1420,1421,1422,1423,1424,1425,1458'. /* ЮЛ */
s-gl[42] = '005,1,9,1401,1403,1405,1407,1409,1411,1417,1420,1421,1422,1423,1424,1425,1458'.  /*ФЛ*/
s-gl[43] = '046,*,1,1201,1202,1204,1205,1208,1209,1451,1452,1453,1456,1457'. 
s-gl[44] = '046,*,3,1201,1202,1204,1205,1208,1209,1451,1452,1453,1456,1457'. 
s-gl[45] = '148,*,1,1206,1207,1454,1455'.        
s-gl[46] = '148,*,3,1206,1207,1454,1455'.        
s-gl[47] = '131,*,*,d1t'.
s-gl[48] = '153,*,1,1201,1451,1452'. /*приложение 700 - Казначейство*/
s-gl[49] = '153,*,3,1201,1451,1452'. /*приложение 700 - Казначейство*/
s-gl[50] = '152,1,3,1201,1202,1203,1204,1451,1452'. /*приложение 700 - Казначейство*/

s-gl[51] = '025,1,5,2051,2052,2054,2055,2056,2057,2058,2059,2111,2227,2230,2255'.
s-gl[52] = '025,1,6,2051,2052,2054,2055,2056,2057,2058,2059,2111,2227,2230,2255'.
s-gl[53] = '025,1,7,2051,2052,2054,2055,2056,2057,2058,2059,2111,2227,2230,2255'.
s-gl[54] = '025,1,8,2051,2052,2054,2055,2056,2057,2058,2059,2111,2227,2230,2255'.
s-gl[55] = '020,1,4,2010,2013,2023,2024,2124,2123'.  /*23/02/06 NATALY добаила только для резиденотов-банков - строка 20*/



v-gl[1] = '134,105210,125110,125120'.
v-gl[2] = '014,145630'.        /*014,1451,1456,1471,1472,1475'.*/
v-gl[3] = '015,147610'.
v-gl[4] = '016,1004,1006'.
v-gl[5] = '017,160200,165300,165420,165440,165800'.
v-gl[6] = '018,165100,165200,165210'.
v-gl[7] = '019,1659'.
/*v-gl[8] = '020,201000,201300,202300,202400,212400,212310'.*/
v-gl[9] = '021,9999'.  /*???????????*/
v-gl[10] = '030,9999'.        
v-gl[11] = '125,9999'.            /*'125,1201,1202,1451,1452,1454,1456'.        */
v-gl[12] = '126,9999'.        
v-gl[13] = '132,2011,2012,2013,2014,2016,2021,2022,2023,2024,2111,2112,2113,2203,2204,2205,2209,2211,2221'.        
v-gl[14] = '135,1251'.        
v-gl[15] = '136,2551,2552,2851,2852,2854,2856,2860,2862,2867,2870'.        
v-gl[16] = '137,2053,2231'.        
v-gl[17] = '138,9999'.        
v-gl[18] = '139,9999'.        
v-gl[19] = '131,1251,1252,1253'.        
v-gl[20] = '150,1001,1002,1003,1004,1005,1006,1051,1053'.        
v-gl[21] = '151,1851,1855,1870,1403,1401'.        

v-gl[22] = '133/11,3001,3025,3101,3510,3580'.        
v-gl[23] = '133/12,3002,3003,3026,3027'.        
v-gl[24] = '100,1659,1699'.        
v-gl[25] = '133/13,3599'.        
v-gl[26] = '133/2,2401,2402'.        



find last cls no-lock no-error.
if avail cls then do:
 put stream st-out unformatted 
  "          Дополнительные сведения для расчета пруденциальных нормативов " skip
  "               и иных обязательств к соблюдению норм лимитов (ежедневная) " skip
  "за " at 20  /*vasof*/ cls.whn " (в тыс.тенге)" skip(2).
 vdt = cls.whn.
end.
else 
 put stream st-out unformatted 
  "          Дополнительные сведения для расчета пруденциальных нормативов " skip
  "               и иных обязательств к соблюдению норм лимитов (ежедневная) " skip
  "за " at 20  vasof " (в тыс.тенге)" skip(2).

vasof = vdt.

if vasof <= 08/31/02 then coef = 1.0.
 else if vasof >= 09/01/02 and vasof <= 08/31/03 then coef = 0.8.
 else if vasof >= 09/01/03 and vasof <= 08/31/04 then coef = 0.6.
 else if vasof >= 09/01/04 and vasof <= 08/31/05 then coef = 0.4.
 else if vasof >= 09/01/05 and vasof <= 08/31/06 then coef = 0.2.
 else if vasof >= 09/01/06 and vasof <= 08/31/07 then coef = 0.0.



run 8st-prf2.
/*
{r-branch.i &proc = "8st-prf11"}
{r-branch.i &proc = "8st-prf22"}
{r-branch.i &proc = "lond127"}
{r-branch.i &proc = "lond130"}
{r-branch.i &proc = "lond131"}
{r-branch.i &proc = "lond140"}
{r-branch.i &proc = "lond152"}
*/






 for each temp no-lock break by kod. 
   ACCUMULATE temp.val (total by  temp.kod).
   if last-of(temp.kod)  then 
   do: 
    create final.  
    final.kod = temp.kod. 
    sum  =  ACCUMulate total  by (temp.kod) temp.val.
    final.val =  sum.
    if final.kod = '133/13' and final.val > 0  then final.val = 0.
   end.
 end.
  
for each final break by kod:
	if 	final.kod <> '131' and final.kod <> '133/11' and 
		final.kod <> '133/12' and  final.kod <> '133/13' and 
		final.kod <> '133/2' and 
		final.kod <> '150' and final.kod <> '151' and 
		final.kod <> '153' and  final.kod <> '162'
	then  
		put stream st-out  skip final.kod ' ' final.val format 'z,zzz,zzz,zz9' at 14.   
	else 
	do: 
		case final.kod:
			when '131' then do:
				find last t-final where t-final.kod = '162' no-lock no-error.
				 if avail t-final then sumdeb = t-final.val.
				find last t-final where t-final.kod = '145' no-lock no-error.
				find last t2-final where t2-final.kod = '150' no-lock no-error.
				find last t3-final where t3-final.kod = '151' no-lock no-error.
				find last t4-final where t4-final.kod = '153' no-lock no-error.
				if avail t-final and avail t2-final  and avail t3-final and avail t4-final then 
                                put stream st-out  skip
					final.kod ' '  final.val - (if avail t-final then t-final.val else 0.0) + 
					(if avail t2-final then t2-final.val else 0.0) + 
					(if avail t3-final then t3-final.val else 0.0) + 
					(if avail t4-final then t4-final.val else 0.0) +
					sumdeb format 'z,zzz,zzz,zz9' at 14.                                     
			end.
			when '133/11' then  do:
				find last t-final  where t-final.kod = '133/12' no-lock no-error.
				find last t2-final where t2-final.kod = '100' no-lock no-error.
				find last t3-final where t3-final.kod = '133/13' no-lock no-error.
				find last t4-final where t4-final.kod = '133/2' no-lock no-error.
				if avail t-final and avail t2-final  and avail t3-final and avail t4-final then 
				sum2 =   min( 0.5 * (final.val - t-final.val +  t2-final.val + t3-final.val), coef * t4-final.val) .

				put stream st-out  skip '133 ' sum2  format 'z,zzz,zzz,zz9' at 14.                                     
			end.

		end case.
	end. /*else */
end. /*each*/

output stream st-out close .
vres = yes.

/*  pause 0.
hide frame ww.
pause 0. 
*/
