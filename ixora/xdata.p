/* xdata.p
 * MODULE
        Название Программного Модуля
 * DESCRIPTION
        Назначение программы, описание процедур и функций
 * RUN
        Способ вызова программы, описание параметров, примеры вызова
 * CALLER
        Список процедур, вызывающих этот файл
 * SCRIPT
        Список скриптов, вызывающих этот файл
 * INHERIT
        Список вызываемых процедур
 * MENU
        Перечень пунктов Меню Прагмы 
 * AUTHOR
        31/12/99 pragma
 * CHANGES
*/

def var xdata as char extent 300 format "x(1)" initial [
"<",    "А",    "u",    "Б",    "Ѓ",    "Е",    "S",    "=",    "U",    "Х" ,
"П",    "в",    "w",    "",    "”",    "л",    "g",    """",    "±",    "J",
"d",    "С",    "s",    ";",    "U",    "\[",    "µ",    "i",    "†",    "“",
"6",    "Ѕ",    "w",    "а",    "­",    "И",    "Ї",    "z",    "Ы",    "€",
"в",    "h",    "Э",    "ц",    "е",    "Ќ",    "Є",    "µ",    "¶",    "g",
"щ",    "Р",    "а",    "•",    "Њ",    "d",    "Х",    "y",    "\[",    "–",
"p",    "_",    "ґ",    "•",    "ґ",    "щ",    "в",    "“",    "u",    "Э",
"o",    "O",    "•",    "w",    "ф",    "“",    "…",    "б",    "љ",    "њ",
";",    "м",    "p",    "`",    "©",    "Х",    "(",    "k",    "«",    "*",
"р",    "к",    " ",    "н",    "`",    "Ћ",    "Ш",    "Ч",    "]",    "H",
"з",    "S",    "ќ",    "є",    "W",    "\[",    "U",    "Ї",    "ћ",    "Щ",
"Њ",    "i",    "?",    ":",    "Р",    "ќ",    "%",    "У",    "±",    "›",
"¦",    "5",    """",   "q",    "\\",    "(",    "б",    "p",    "Т",    "Љ",
"…",    "O",    "†",    "g",    "й",    "p",    "Е",    ">",    "ђ",    " ",
"Ь",    "Г",    "H",    "c",    "‰",    "в",    "‹",    "p",    "Э",    "b",
"Ћ",    "№",    "Б",    "а",    "Ё",    "о",    "Н",    "5",    "б",    "¤",
"€",    "К",    "",    "±",    "‚",    " ",    "Ђ",    "ы",    "х",    "Г",
"`",    "Ћ",    "њ",    "©",    "µ",    "с",    "a",    "m",    "ё",    "B",
"v",    "ы",    "f",    "p",    "ф",    "Ь",    "L",    "N",    "щ",    "\]",
"G",    "Р",    " ",    "‡",    "ч",    "5",    "у",    "&",    "%",    "^",
"§",    "ћ",    "­",    "ю",    "1",    "Є",    "щ",    "`",    "О",    "ц",
"А",    "\{",    "ш",    "a",   """",    "&",    "З",    "a",    "—",    "¶",
"’",    "Х",    "›",    "а",    "ї",    "х",    "ъ",    "Д",    "'",    "!",
"ў",    "g",    "‹",    "‹",    "ъ",    "џ",    "ї",    "я",    "†",    "3",
"ј",    " ",    "н",    "Б",    "4",    "А",    "Й",    "C",    "§",    "$",
"З",    "н",    "ґ",    "ћ",    "¤",    "™",    "р",    "ґ",    "c",    "¦",
"Ђ",    "З",    "ї",    "Ш",    "з",    "У",    "=",    "’",    "н",    "H",
"№",    "ґ",    "/",    "Н",    "2",    "@",    "H",    "ё",    "…",    "°",
"“",    "И",    "Ч",    "ћ",    "k",    "€",    "К",    "д",    " ",    "у",
"‘",    "Б",    "©",    "W",    "ц",    "ц",    "ћ",    "f",    "‘",    "Б" ].

def input parameter ipar as cha.
def output parameter opar as cha.
def var i as int.
def  var lip as int.
def  var k as int.
def  var a as int.
def  var b as int.

lip = length(ipar).
k = 1.

do i = 1 to lip:

 a = asc(xdata[k]).
 b = asc(substr(ipar,i,1)).
 if b >= 32 then do:
 if a >= b then substr(opar,i,1) = chr(32 + a - b).
  else substr(opar,i,1) = chr(32 + 223 - ( b - a )).
 end.
 else substr(opar,i,1) = chr(b).
 k = k + 1.
 if k = 301 then k = 1.
end.

